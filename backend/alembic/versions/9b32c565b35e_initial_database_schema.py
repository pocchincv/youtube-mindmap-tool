"""Initial database schema

Revision ID: 9b32c565b35e
Revises: 
Create Date: 2025-09-04 16:44:06.853822

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '9b32c565b35e'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('google_oauth_id', sa.String(length=255), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('display_name', sa.String(length=255), nullable=True),
    sa.Column('preferences', sa.JSON(), nullable=True),
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_google_oauth_id'), 'users', ['google_oauth_id'], unique=True)
    op.create_table('videos',
    sa.Column('youtube_id', sa.String(length=20), nullable=False),
    sa.Column('title', sa.String(length=500), nullable=False),
    sa.Column('channel_name', sa.String(length=255), nullable=True),
    sa.Column('duration', sa.Integer(), nullable=True),
    sa.Column('view_count', sa.Integer(), nullable=True),
    sa.Column('thumbnail_url', sa.String(length=500), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('processed_at', sa.DateTime(), nullable=True),
    sa.Column('processing_status', sa.String(length=50), nullable=False),
    sa.Column('transcript_data', sa.JSON(), nullable=True),
    sa.Column('video_metadata', sa.JSON(), nullable=True),
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_video_channel_name', 'videos', ['channel_name'], unique=False)
    op.create_index('idx_video_status_created', 'videos', ['processing_status', 'created_at'], unique=False)
    op.create_index('idx_video_title_search', 'videos', ['title'], unique=False)
    op.create_index(op.f('ix_videos_processing_status'), 'videos', ['processing_status'], unique=False)
    op.create_index(op.f('ix_videos_youtube_id'), 'videos', ['youtube_id'], unique=True)
    op.create_table('api_configurations',
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('service_name', sa.String(length=100), nullable=False),
    sa.Column('service_type', sa.String(length=50), nullable=False),
    sa.Column('api_key_encrypted', sa.Text(), nullable=True),
    sa.Column('config_data_encrypted', sa.Text(), nullable=True),
    sa.Column('public_config', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('last_used_at', sa.DateTime(), nullable=True),
    sa.Column('usage_count', sa.Integer(), nullable=False),
    sa.Column('daily_quota', sa.Integer(), nullable=True),
    sa.Column('daily_usage', sa.Integer(), nullable=False),
    sa.Column('quota_reset_at', sa.DateTime(), nullable=True),
    sa.Column('last_error', sa.Text(), nullable=True),
    sa.Column('error_count', sa.Integer(), nullable=False),
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_api_config_active', 'api_configurations', ['is_active'], unique=False)
    op.create_index('idx_api_config_last_used', 'api_configurations', ['last_used_at'], unique=False)
    op.create_index('idx_api_config_user_service', 'api_configurations', ['user_id', 'service_name'], unique=False)
    op.create_index('idx_api_config_user_type', 'api_configurations', ['user_id', 'service_type'], unique=False)
    op.create_index('idx_api_config_verified', 'api_configurations', ['is_verified'], unique=False)
    op.create_index(op.f('ix_api_configurations_user_id'), 'api_configurations', ['user_id'], unique=False)
    op.create_table('mindmap_nodes',
    sa.Column('video_id', sa.String(length=36), nullable=False),
    sa.Column('parent_node_id', sa.String(length=36), nullable=True),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('timestamp_start', sa.Integer(), nullable=True),
    sa.Column('timestamp_end', sa.Integer(), nullable=True),
    sa.Column('node_type', sa.String(length=50), nullable=False),
    sa.Column('level', sa.Integer(), nullable=False),
    sa.Column('display_order', sa.Integer(), nullable=False),
    sa.Column('position_data', sa.JSON(), nullable=True),
    sa.Column('node_metadata', sa.JSON(), nullable=True),
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['parent_node_id'], ['mindmap_nodes.id'], ),
    sa.ForeignKeyConstraint(['video_id'], ['videos.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_mindmap_parent_order', 'mindmap_nodes', ['parent_node_id', 'display_order'], unique=False)
    op.create_index('idx_mindmap_timestamp', 'mindmap_nodes', ['video_id', 'timestamp_start', 'timestamp_end'], unique=False)
    op.create_index('idx_mindmap_type', 'mindmap_nodes', ['node_type'], unique=False)
    op.create_index('idx_mindmap_video_level', 'mindmap_nodes', ['video_id', 'level'], unique=False)
    op.create_index('idx_mindmap_video_parent', 'mindmap_nodes', ['video_id', 'parent_node_id'], unique=False)
    op.create_index(op.f('ix_mindmap_nodes_parent_node_id'), 'mindmap_nodes', ['parent_node_id'], unique=False)
    op.create_index(op.f('ix_mindmap_nodes_video_id'), 'mindmap_nodes', ['video_id'], unique=False)
    op.create_table('playlists',
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(length=1000), nullable=True),
    sa.Column('is_system_playlist', sa.Boolean(), nullable=False),
    sa.Column('display_order', sa.Integer(), nullable=False),
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_playlist_system', 'playlists', ['is_system_playlist'], unique=False)
    op.create_index('idx_playlist_user_name', 'playlists', ['user_id', 'name'], unique=False)
    op.create_index('idx_playlist_user_order', 'playlists', ['user_id', 'display_order'], unique=False)
    op.create_index(op.f('ix_playlists_user_id'), 'playlists', ['user_id'], unique=False)
    op.create_table('processing_cache',
    sa.Column('video_id', sa.String(length=36), nullable=False),
    sa.Column('cache_key', sa.String(length=255), nullable=False),
    sa.Column('data_type', sa.String(length=50), nullable=False),
    sa.Column('data_content', sa.JSON(), nullable=True),
    sa.Column('text_content', sa.Text(), nullable=True),
    sa.Column('file_path', sa.String(length=500), nullable=True),
    sa.Column('cache_version', sa.String(length=50), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('is_permanent', sa.Boolean(), nullable=False),
    sa.Column('hit_count', sa.Integer(), nullable=False),
    sa.Column('last_accessed_at', sa.DateTime(), nullable=True),
    sa.Column('processing_time', sa.Integer(), nullable=True),
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['video_id'], ['videos.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_cache_accessed', 'processing_cache', ['last_accessed_at'], unique=False)
    op.create_index('idx_cache_expires', 'processing_cache', ['expires_at'], unique=False)
    op.create_index('idx_cache_key_version', 'processing_cache', ['cache_key', 'cache_version'], unique=False)
    op.create_index('idx_cache_type', 'processing_cache', ['data_type'], unique=False)
    op.create_index('idx_cache_video_key', 'processing_cache', ['video_id', 'cache_key'], unique=False)
    op.create_index(op.f('ix_processing_cache_cache_key'), 'processing_cache', ['cache_key'], unique=False)
    op.create_index(op.f('ix_processing_cache_video_id'), 'processing_cache', ['video_id'], unique=False)
    op.create_table('search_history',
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('query', sa.Text(), nullable=False),
    sa.Column('query_language', sa.String(length=10), nullable=False),
    sa.Column('query_type', sa.String(length=50), nullable=False),
    sa.Column('results_count', sa.Integer(), nullable=False),
    sa.Column('search_results', sa.JSON(), nullable=True),
    sa.Column('query_metadata', sa.JSON(), nullable=True),
    sa.Column('search_duration', sa.Integer(), nullable=True),
    sa.Column('clicked_results', sa.JSON(), nullable=True),
    sa.Column('search_context', sa.JSON(), nullable=True),
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_search_query_lang', 'search_history', ['query_language'], unique=False)
    op.create_index('idx_search_results_count', 'search_history', ['results_count'], unique=False)
    op.create_index('idx_search_type', 'search_history', ['query_type'], unique=False)
    op.create_index('idx_search_user_created', 'search_history', ['user_id', 'created_at'], unique=False)
    op.create_index('idx_search_user_query', 'search_history', ['user_id', 'query'], unique=False)
    op.create_index(op.f('ix_search_history_user_id'), 'search_history', ['user_id'], unique=False)
    op.create_table('playlist_videos',
    sa.Column('playlist_id', sa.String(length=36), nullable=False),
    sa.Column('video_id', sa.String(length=36), nullable=False),
    sa.Column('position', sa.Integer(), nullable=False),
    sa.Column('added_at', sa.DateTime(), nullable=False),
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['playlist_id'], ['playlists.id'], ),
    sa.ForeignKeyConstraint(['video_id'], ['videos.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('playlist_id', 'position', name='uq_playlist_position'),
    sa.UniqueConstraint('playlist_id', 'video_id', name='uq_playlist_video')
    )
    op.create_index('idx_playlist_video_added', 'playlist_videos', ['playlist_id', 'added_at'], unique=False)
    op.create_index('idx_playlist_video_playlist', 'playlist_videos', ['playlist_id'], unique=False)
    op.create_index('idx_playlist_video_position', 'playlist_videos', ['playlist_id', 'position'], unique=False)
    op.create_index('idx_playlist_video_video', 'playlist_videos', ['video_id'], unique=False)
    op.create_index(op.f('ix_playlist_videos_playlist_id'), 'playlist_videos', ['playlist_id'], unique=False)
    op.create_index(op.f('ix_playlist_videos_video_id'), 'playlist_videos', ['video_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_playlist_videos_video_id'), table_name='playlist_videos')
    op.drop_index(op.f('ix_playlist_videos_playlist_id'), table_name='playlist_videos')
    op.drop_index('idx_playlist_video_video', table_name='playlist_videos')
    op.drop_index('idx_playlist_video_position', table_name='playlist_videos')
    op.drop_index('idx_playlist_video_playlist', table_name='playlist_videos')
    op.drop_index('idx_playlist_video_added', table_name='playlist_videos')
    op.drop_table('playlist_videos')
    op.drop_index(op.f('ix_search_history_user_id'), table_name='search_history')
    op.drop_index('idx_search_user_query', table_name='search_history')
    op.drop_index('idx_search_user_created', table_name='search_history')
    op.drop_index('idx_search_type', table_name='search_history')
    op.drop_index('idx_search_results_count', table_name='search_history')
    op.drop_index('idx_search_query_lang', table_name='search_history')
    op.drop_table('search_history')
    op.drop_index(op.f('ix_processing_cache_video_id'), table_name='processing_cache')
    op.drop_index(op.f('ix_processing_cache_cache_key'), table_name='processing_cache')
    op.drop_index('idx_cache_video_key', table_name='processing_cache')
    op.drop_index('idx_cache_type', table_name='processing_cache')
    op.drop_index('idx_cache_key_version', table_name='processing_cache')
    op.drop_index('idx_cache_expires', table_name='processing_cache')
    op.drop_index('idx_cache_accessed', table_name='processing_cache')
    op.drop_table('processing_cache')
    op.drop_index(op.f('ix_playlists_user_id'), table_name='playlists')
    op.drop_index('idx_playlist_user_order', table_name='playlists')
    op.drop_index('idx_playlist_user_name', table_name='playlists')
    op.drop_index('idx_playlist_system', table_name='playlists')
    op.drop_table('playlists')
    op.drop_index(op.f('ix_mindmap_nodes_video_id'), table_name='mindmap_nodes')
    op.drop_index(op.f('ix_mindmap_nodes_parent_node_id'), table_name='mindmap_nodes')
    op.drop_index('idx_mindmap_video_parent', table_name='mindmap_nodes')
    op.drop_index('idx_mindmap_video_level', table_name='mindmap_nodes')
    op.drop_index('idx_mindmap_type', table_name='mindmap_nodes')
    op.drop_index('idx_mindmap_timestamp', table_name='mindmap_nodes')
    op.drop_index('idx_mindmap_parent_order', table_name='mindmap_nodes')
    op.drop_table('mindmap_nodes')
    op.drop_index(op.f('ix_api_configurations_user_id'), table_name='api_configurations')
    op.drop_index('idx_api_config_verified', table_name='api_configurations')
    op.drop_index('idx_api_config_user_type', table_name='api_configurations')
    op.drop_index('idx_api_config_user_service', table_name='api_configurations')
    op.drop_index('idx_api_config_last_used', table_name='api_configurations')
    op.drop_index('idx_api_config_active', table_name='api_configurations')
    op.drop_table('api_configurations')
    op.drop_index(op.f('ix_videos_youtube_id'), table_name='videos')
    op.drop_index(op.f('ix_videos_processing_status'), table_name='videos')
    op.drop_index('idx_video_title_search', table_name='videos')
    op.drop_index('idx_video_status_created', table_name='videos')
    op.drop_index('idx_video_channel_name', table_name='videos')
    op.drop_table('videos')
    op.drop_index(op.f('ix_users_google_oauth_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
